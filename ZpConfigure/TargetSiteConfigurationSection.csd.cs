//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.18444
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace MasterDuner.HHProjects.Csq.Highpincn.Configuration
{
    
    
    /// <summary>
    /// 模拟的身份认证凭据配置。
    /// </summary>
    public sealed partial class AnalogousCredentialsElement : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region UserName Property
        /// <summary>
        /// The XML name of the <see cref="UserName"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        internal const string UserNamePropertyName = "userName";
        
        /// <summary>
        /// Gets or sets 设置或获取用于模拟的帐户名。
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        [global::System.ComponentModel.DescriptionAttribute("设置或获取用于模拟的帐户名。")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::MasterDuner.HHProjects.Csq.Highpincn.Configuration.AnalogousCredentialsElement.UserNamePropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false)]
        public string UserName
        {
            get
            {
                return ((string)(base[global::MasterDuner.HHProjects.Csq.Highpincn.Configuration.AnalogousCredentialsElement.UserNamePropertyName]));
            }
            set
            {
                base[global::MasterDuner.HHProjects.Csq.Highpincn.Configuration.AnalogousCredentialsElement.UserNamePropertyName] = value;
            }
        }
        #endregion
        
        #region Passphrase Property
        /// <summary>
        /// The XML name of the <see cref="Passphrase"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        internal const string PassphrasePropertyName = "passphrase";
        
        /// <summary>
        /// Gets or sets 设置或获取用来模拟登录的用户口令。
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        [global::System.ComponentModel.DescriptionAttribute("设置或获取用来模拟登录的用户口令。")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::MasterDuner.HHProjects.Csq.Highpincn.Configuration.AnalogousCredentialsElement.PassphrasePropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false)]
        public string Passphrase
        {
            get
            {
                return ((string)(base[global::MasterDuner.HHProjects.Csq.Highpincn.Configuration.AnalogousCredentialsElement.PassphrasePropertyName]));
            }
            set
            {
                base[global::MasterDuner.HHProjects.Csq.Highpincn.Configuration.AnalogousCredentialsElement.PassphrasePropertyName] = value;
            }
        }
        #endregion
    }
}
namespace MasterDuner.HHProjects.Csq.Highpincn.Configuration
{
    
    
    /// <summary>
    /// 模拟登录配置。
    /// </summary>
    public sealed partial class AnalogousSigninElement : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region Enabled Property
        /// <summary>
        /// The XML name of the <see cref="Enabled"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        internal const string EnabledPropertyName = "enabled";
        
        /// <summary>
        /// Gets or sets the Enabled.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        [global::System.ComponentModel.DescriptionAttribute("The Enabled.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::MasterDuner.HHProjects.Csq.Highpincn.Configuration.AnalogousSigninElement.EnabledPropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false, DefaultValue=true)]
        public bool Enabled
        {
            get
            {
                return ((bool)(base[global::MasterDuner.HHProjects.Csq.Highpincn.Configuration.AnalogousSigninElement.EnabledPropertyName]));
            }
            set
            {
                base[global::MasterDuner.HHProjects.Csq.Highpincn.Configuration.AnalogousSigninElement.EnabledPropertyName] = value;
            }
        }
        #endregion
        
        #region AnalogousAccount Property
        /// <summary>
        /// The XML name of the <see cref="AnalogousAccount"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        internal const string AnalogousAccountPropertyName = "analogousAccount";
        
        /// <summary>
        /// Gets or sets 设置或获取模拟账户信息。
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        [global::System.ComponentModel.DescriptionAttribute("设置或获取模拟账户信息。")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::MasterDuner.HHProjects.Csq.Highpincn.Configuration.AnalogousSigninElement.AnalogousAccountPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public global::MasterDuner.HHProjects.Csq.Highpincn.Configuration.AnalogousCredentialsElement AnalogousAccount
        {
            get
            {
                return ((global::MasterDuner.HHProjects.Csq.Highpincn.Configuration.AnalogousCredentialsElement)(base[global::MasterDuner.HHProjects.Csq.Highpincn.Configuration.AnalogousSigninElement.AnalogousAccountPropertyName]));
            }
            set
            {
                base[global::MasterDuner.HHProjects.Csq.Highpincn.Configuration.AnalogousSigninElement.AnalogousAccountPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace MasterDuner.HHProjects.Csq.Highpincn.Configuration
{
    
    
    /// <summary>
    /// 卓聘网URL资源配置。
    /// </summary>
    public sealed partial class UrlResourceElement : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region Url Property
        /// <summary>
        /// The XML name of the <see cref="Url"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        internal const string UrlPropertyName = "url";
        
        /// <summary>
        /// Gets or sets 设置或获取URL。
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        [global::System.ComponentModel.DescriptionAttribute("设置或获取URL。")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::MasterDuner.HHProjects.Csq.Highpincn.Configuration.UrlResourceElement.UrlPropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false)]
        public string Url
        {
            get
            {
                return ((string)(base[global::MasterDuner.HHProjects.Csq.Highpincn.Configuration.UrlResourceElement.UrlPropertyName]));
            }
            set
            {
                base[global::MasterDuner.HHProjects.Csq.Highpincn.Configuration.UrlResourceElement.UrlPropertyName] = value;
            }
        }
        #endregion
        
        #region Name Property
        /// <summary>
        /// The XML name of the <see cref="Name"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        internal const string NamePropertyName = "name";
        
        /// <summary>
        /// Gets or sets 设置或获取URL资源标识名称。
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        [global::System.ComponentModel.DescriptionAttribute("设置或获取URL资源标识名称。")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::MasterDuner.HHProjects.Csq.Highpincn.Configuration.UrlResourceElement.NamePropertyName, IsRequired=true, IsKey=true, IsDefaultCollection=false)]
        public string Name
        {
            get
            {
                return ((string)(base[global::MasterDuner.HHProjects.Csq.Highpincn.Configuration.UrlResourceElement.NamePropertyName]));
            }
            set
            {
                base[global::MasterDuner.HHProjects.Csq.Highpincn.Configuration.UrlResourceElement.NamePropertyName] = value;
            }
        }
        #endregion
    }
}
namespace MasterDuner.HHProjects.Csq.Highpincn.Configuration
{
    
    
    /// <summary>
    /// UrlResourceElement集合。
    /// </summary>
    [global::System.Configuration.ConfigurationCollectionAttribute(typeof(global::MasterDuner.HHProjects.Csq.Highpincn.Configuration.UrlResourceElement), CollectionType=global::System.Configuration.ConfigurationElementCollectionType.BasicMap, AddItemName=global::MasterDuner.HHProjects.Csq.Highpincn.Configuration.UrlResourceElementCollection.UrlResourceElementPropertyName)]
    public sealed partial class UrlResourceElementCollection : global::System.Configuration.ConfigurationElementCollection
    {
        
        #region Constants
        /// <summary>
        /// The XML name of the individual <see cref="global::MasterDuner.HHProjects.Csq.Highpincn.Configuration.UrlResourceElement"/> instances in this collection.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        internal const string UrlResourceElementPropertyName = "add";
        #endregion
        
        #region Overrides
        /// <summary>
        /// Gets the type of the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <returns>The <see cref="global::System.Configuration.ConfigurationElementCollectionType"/> of this collection.</returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        public override global::System.Configuration.ConfigurationElementCollectionType CollectionType
        {
            get
            {
                return global::System.Configuration.ConfigurationElementCollectionType.BasicMap;
            }
        }
        
        /// <summary>
        /// Gets the name used to identify this collection of elements
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        protected override string ElementName
        {
            get
            {
                return global::MasterDuner.HHProjects.Csq.Highpincn.Configuration.UrlResourceElementCollection.UrlResourceElementPropertyName;
            }
        }
        
        /// <summary>
        /// Indicates whether the specified <see cref="global::System.Configuration.ConfigurationElement"/> exists in the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="elementName">The name of the element to verify.</param>
        /// <returns>
        /// <see langword="true"/> if the element exists in the collection; otherwise, <see langword="false"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        protected override bool IsElementName(string elementName)
        {
            return (elementName == global::MasterDuner.HHProjects.Csq.Highpincn.Configuration.UrlResourceElementCollection.UrlResourceElementPropertyName);
        }
        
        /// <summary>
        /// Gets the element key for the specified configuration element.
        /// </summary>
        /// <param name="element">The <see cref="global::System.Configuration.ConfigurationElement"/> to return the key for.</param>
        /// <returns>
        /// An <see cref="object"/> that acts as the key for the specified <see cref="global::System.Configuration.ConfigurationElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        protected override object GetElementKey(global::System.Configuration.ConfigurationElement element)
        {
            return ((global::MasterDuner.HHProjects.Csq.Highpincn.Configuration.UrlResourceElement)(element)).Name;
        }
        
        /// <summary>
        /// Creates a new <see cref="global::MasterDuner.HHProjects.Csq.Highpincn.Configuration.UrlResourceElement"/>.
        /// </summary>
        /// <returns>
        /// A new <see cref="global::MasterDuner.HHProjects.Csq.Highpincn.Configuration.UrlResourceElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        protected override global::System.Configuration.ConfigurationElement CreateNewElement()
        {
            return new global::MasterDuner.HHProjects.Csq.Highpincn.Configuration.UrlResourceElement();
        }
        #endregion
        
        #region Indexer
        /// <summary>
        /// Gets the <see cref="global::MasterDuner.HHProjects.Csq.Highpincn.Configuration.UrlResourceElement"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::MasterDuner.HHProjects.Csq.Highpincn.Configuration.UrlResourceElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        public global::MasterDuner.HHProjects.Csq.Highpincn.Configuration.UrlResourceElement this[int index]
        {
            get
            {
                return ((global::MasterDuner.HHProjects.Csq.Highpincn.Configuration.UrlResourceElement)(base.BaseGet(index)));
            }
        }
        
        /// <summary>
        /// Gets the <see cref="global::MasterDuner.HHProjects.Csq.Highpincn.Configuration.UrlResourceElement"/> with the specified key.
        /// </summary>
        /// <param name="name">The key of the <see cref="global::MasterDuner.HHProjects.Csq.Highpincn.Configuration.UrlResourceElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        public global::MasterDuner.HHProjects.Csq.Highpincn.Configuration.UrlResourceElement this[object name]
        {
            get
            {
                return ((global::MasterDuner.HHProjects.Csq.Highpincn.Configuration.UrlResourceElement)(base.BaseGet(name)));
            }
        }
        #endregion
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
    }
}
namespace MasterDuner.HHProjects.Csq.Highpincn.Configuration
{
    
    
    /// <summary>
    /// 站点资源配置。
    /// </summary>
    public sealed partial class SiteResourceElement : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region DomainName Property
        /// <summary>
        /// The XML name of the <see cref="DomainName"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        internal const string DomainNamePropertyName = "domainName";
        
        /// <summary>
        /// Gets or sets 设置或获取域名称。
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        [global::System.ComponentModel.DescriptionAttribute("设置或获取域名称。")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::MasterDuner.HHProjects.Csq.Highpincn.Configuration.SiteResourceElement.DomainNamePropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public string DomainName
        {
            get
            {
                return ((string)(base[global::MasterDuner.HHProjects.Csq.Highpincn.Configuration.SiteResourceElement.DomainNamePropertyName]));
            }
            set
            {
                base[global::MasterDuner.HHProjects.Csq.Highpincn.Configuration.SiteResourceElement.DomainNamePropertyName] = value;
            }
        }
        #endregion
        
        #region UrlResources Property
        /// <summary>
        /// The XML name of the <see cref="UrlResources"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        internal const string UrlResourcesPropertyName = "urls";
        
        /// <summary>
        /// Gets or sets the UrlResources.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        [global::System.ComponentModel.DescriptionAttribute("The UrlResources.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::MasterDuner.HHProjects.Csq.Highpincn.Configuration.SiteResourceElement.UrlResourcesPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public global::MasterDuner.HHProjects.Csq.Highpincn.Configuration.UrlResourceElementCollection UrlResources
        {
            get
            {
                return ((global::MasterDuner.HHProjects.Csq.Highpincn.Configuration.UrlResourceElementCollection)(base[global::MasterDuner.HHProjects.Csq.Highpincn.Configuration.SiteResourceElement.UrlResourcesPropertyName]));
            }
            set
            {
                base[global::MasterDuner.HHProjects.Csq.Highpincn.Configuration.SiteResourceElement.UrlResourcesPropertyName] = value;
            }
        }
        #endregion
        
        #region HomePage Property
        /// <summary>
        /// The XML name of the <see cref="HomePage"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        internal const string HomePagePropertyName = "homePage";
        
        /// <summary>
        /// Gets or sets 设置或获取卓聘网首页地址。
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        [global::System.ComponentModel.DescriptionAttribute("设置或获取卓聘网首页地址。")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::MasterDuner.HHProjects.Csq.Highpincn.Configuration.SiteResourceElement.HomePagePropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public global::MasterDuner.HHProjects.Csq.Highpincn.Configuration.UrlResourceElement HomePage
        {
            get
            {
                return ((global::MasterDuner.HHProjects.Csq.Highpincn.Configuration.UrlResourceElement)(base[global::MasterDuner.HHProjects.Csq.Highpincn.Configuration.SiteResourceElement.HomePagePropertyName]));
            }
            set
            {
                base[global::MasterDuner.HHProjects.Csq.Highpincn.Configuration.SiteResourceElement.HomePagePropertyName] = value;
            }
        }
        #endregion
    }
}
namespace MasterDuner.HHProjects.Csq.Highpincn.Configuration
{
    
    
    /// <summary>
    /// 会话缓存配置。
    /// </summary>
    public sealed partial class SessionCachingElement : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region CacheSlidingExpirationEnabled Property
        /// <summary>
        /// The XML name of the <see cref="CacheSlidingExpirationEnabled"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        internal const string CacheSlidingExpirationEnabledPropertyName = "cacheSlidingExpirationEnabled";
        
        /// <summary>
        /// Gets or sets 设置或获取是否启用滑动的会话缓存超时设置。
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        [global::System.ComponentModel.DescriptionAttribute("设置或获取是否启用滑动的会话缓存超时设置。")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::MasterDuner.HHProjects.Csq.Highpincn.Configuration.SessionCachingElement.CacheSlidingExpirationEnabledPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false, DefaultValue=false)]
        public bool CacheSlidingExpirationEnabled
        {
            get
            {
                return ((bool)(base[global::MasterDuner.HHProjects.Csq.Highpincn.Configuration.SessionCachingElement.CacheSlidingExpirationEnabledPropertyName]));
            }
            set
            {
                base[global::MasterDuner.HHProjects.Csq.Highpincn.Configuration.SessionCachingElement.CacheSlidingExpirationEnabledPropertyName] = value;
            }
        }
        #endregion
        
        #region AbsoluteExpirationMinutes Property
        /// <summary>
        /// The XML name of the <see cref="AbsoluteExpirationMinutes"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        internal const string AbsoluteExpirationMinutesPropertyName = "absoluteExpirationMinutes";
        
        /// <summary>
        /// Gets or sets 设置或获取绝对超时分钟数。
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        [global::System.ComponentModel.DescriptionAttribute("设置或获取绝对超时分钟数。")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::MasterDuner.HHProjects.Csq.Highpincn.Configuration.SessionCachingElement.AbsoluteExpirationMinutesPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public int AbsoluteExpirationMinutes
        {
            get
            {
                return ((int)(base[global::MasterDuner.HHProjects.Csq.Highpincn.Configuration.SessionCachingElement.AbsoluteExpirationMinutesPropertyName]));
            }
            set
            {
                base[global::MasterDuner.HHProjects.Csq.Highpincn.Configuration.SessionCachingElement.AbsoluteExpirationMinutesPropertyName] = value;
            }
        }
        #endregion
        
        #region SlidingExpirationMinutes Property
        /// <summary>
        /// The XML name of the <see cref="SlidingExpirationMinutes"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        internal const string SlidingExpirationMinutesPropertyName = "slidingExpirationMinutes";
        
        /// <summary>
        /// Gets or sets 设置或获取滑动超时分钟数。
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        [global::System.ComponentModel.DescriptionAttribute("设置或获取滑动超时分钟数。")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::MasterDuner.HHProjects.Csq.Highpincn.Configuration.SessionCachingElement.SlidingExpirationMinutesPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false, DefaultValue=30)]
        public int SlidingExpirationMinutes
        {
            get
            {
                return ((int)(base[global::MasterDuner.HHProjects.Csq.Highpincn.Configuration.SessionCachingElement.SlidingExpirationMinutesPropertyName]));
            }
            set
            {
                base[global::MasterDuner.HHProjects.Csq.Highpincn.Configuration.SessionCachingElement.SlidingExpirationMinutesPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace MasterDuner.HHProjects.Csq.Highpincn.Configuration
{
    
    
    /// <summary>
    /// 跨站查询服务配置。
    /// </summary>
    public sealed partial class HighpinCnQueryServiceSection : global::System.Configuration.ConfigurationSection
    {
        
        #region Xmlns Property
        /// <summary>
        /// The XML name of the <see cref="Xmlns"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        internal const string XmlnsPropertyName = "xmlns";
        
        /// <summary>
        /// Gets the XML namespace of this Configuration Section.
        /// </summary>
        /// <remarks>
        /// This property makes sure that if the configuration file contains the XML namespace,
        /// the parser doesn't throw an exception because it encounters the unknown "xmlns" attribute.
        /// </remarks>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::MasterDuner.HHProjects.Csq.Highpincn.Configuration.HighpinCnQueryServiceSection.XmlnsPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public string Xmlns
        {
            get
            {
                return ((string)(base[global::MasterDuner.HHProjects.Csq.Highpincn.Configuration.HighpinCnQueryServiceSection.XmlnsPropertyName]));
            }
        }
        #endregion
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region Authentication Property
        /// <summary>
        /// The XML name of the <see cref="Authentication"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        internal const string AuthenticationPropertyName = "authentication";
        
        /// <summary>
        /// Gets or sets 设置或获取卓聘网的模拟身份认证信息。
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        [global::System.ComponentModel.DescriptionAttribute("设置或获取卓聘网的模拟身份认证信息。")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::MasterDuner.HHProjects.Csq.Highpincn.Configuration.HighpinCnQueryServiceSection.AuthenticationPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public global::MasterDuner.HHProjects.Csq.Highpincn.Configuration.AnalogousSigninElement Authentication
        {
            get
            {
                return ((global::MasterDuner.HHProjects.Csq.Highpincn.Configuration.AnalogousSigninElement)(base[global::MasterDuner.HHProjects.Csq.Highpincn.Configuration.HighpinCnQueryServiceSection.AuthenticationPropertyName]));
            }
            set
            {
                base[global::MasterDuner.HHProjects.Csq.Highpincn.Configuration.HighpinCnQueryServiceSection.AuthenticationPropertyName] = value;
            }
        }
        #endregion
        
        #region Resources Property
        /// <summary>
        /// The XML name of the <see cref="Resources"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        internal const string ResourcesPropertyName = "resources";
        
        /// <summary>
        /// Gets or sets 设置或获取卓聘网的站点资源。
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        [global::System.ComponentModel.DescriptionAttribute("设置或获取卓聘网的站点资源。")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::MasterDuner.HHProjects.Csq.Highpincn.Configuration.HighpinCnQueryServiceSection.ResourcesPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public global::MasterDuner.HHProjects.Csq.Highpincn.Configuration.SiteResourceElement Resources
        {
            get
            {
                return ((global::MasterDuner.HHProjects.Csq.Highpincn.Configuration.SiteResourceElement)(base[global::MasterDuner.HHProjects.Csq.Highpincn.Configuration.HighpinCnQueryServiceSection.ResourcesPropertyName]));
            }
            set
            {
                base[global::MasterDuner.HHProjects.Csq.Highpincn.Configuration.HighpinCnQueryServiceSection.ResourcesPropertyName] = value;
            }
        }
        #endregion
        
        #region SessionCaching Property
        /// <summary>
        /// The XML name of the <see cref="SessionCaching"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        internal const string SessionCachingPropertyName = "sessionCaching";
        
        /// <summary>
        /// Gets or sets 设置或获取会话缓存设置。
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        [global::System.ComponentModel.DescriptionAttribute("设置或获取会话缓存设置。")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::MasterDuner.HHProjects.Csq.Highpincn.Configuration.HighpinCnQueryServiceSection.SessionCachingPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public global::MasterDuner.HHProjects.Csq.Highpincn.Configuration.SessionCachingElement SessionCaching
        {
            get
            {
                return ((global::MasterDuner.HHProjects.Csq.Highpincn.Configuration.SessionCachingElement)(base[global::MasterDuner.HHProjects.Csq.Highpincn.Configuration.HighpinCnQueryServiceSection.SessionCachingPropertyName]));
            }
            set
            {
                base[global::MasterDuner.HHProjects.Csq.Highpincn.Configuration.HighpinCnQueryServiceSection.SessionCachingPropertyName] = value;
            }
        }
        #endregion
        
        #region ValidatingCodeTempDir Property
        /// <summary>
        /// The XML name of the <see cref="ValidatingCodeTempDir"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        internal const string ValidatingCodeTempDirPropertyName = "validatingCodeTempDir";
        
        /// <summary>
        /// Gets or sets 设置或获取验证码临时文件目录路径。
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        [global::System.ComponentModel.DescriptionAttribute("设置或获取验证码临时文件目录路径。")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::MasterDuner.HHProjects.Csq.Highpincn.Configuration.HighpinCnQueryServiceSection.ValidatingCodeTempDirPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public global::MasterDuner.HHProjects.Csq.Highpincn.Configuration.ValidatingCodeTemporaryDirectoryElement ValidatingCodeTempDir
        {
            get
            {
                return ((global::MasterDuner.HHProjects.Csq.Highpincn.Configuration.ValidatingCodeTemporaryDirectoryElement)(base[global::MasterDuner.HHProjects.Csq.Highpincn.Configuration.HighpinCnQueryServiceSection.ValidatingCodeTempDirPropertyName]));
            }
            set
            {
                base[global::MasterDuner.HHProjects.Csq.Highpincn.Configuration.HighpinCnQueryServiceSection.ValidatingCodeTempDirPropertyName] = value;
            }
        }
        #endregion
        
        #region LegalValidatingCodeSequence Property
        /// <summary>
        /// The XML name of the <see cref="LegalValidatingCodeSequence"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        internal const string LegalValidatingCodeSequencePropertyName = "legalValidatingCodeSequence";
        
        /// <summary>
        /// Gets or sets 设置或获取合法的验证码字符序列。
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        [global::System.ComponentModel.DescriptionAttribute("设置或获取合法的验证码字符序列。")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::MasterDuner.HHProjects.Csq.Highpincn.Configuration.HighpinCnQueryServiceSection.LegalValidatingCodeSequencePropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public global::MasterDuner.HHProjects.Csq.Highpincn.Configuration.LegalCharsequenceElement LegalValidatingCodeSequence
        {
            get
            {
                return ((global::MasterDuner.HHProjects.Csq.Highpincn.Configuration.LegalCharsequenceElement)(base[global::MasterDuner.HHProjects.Csq.Highpincn.Configuration.HighpinCnQueryServiceSection.LegalValidatingCodeSequencePropertyName]));
            }
            set
            {
                base[global::MasterDuner.HHProjects.Csq.Highpincn.Configuration.HighpinCnQueryServiceSection.LegalValidatingCodeSequencePropertyName] = value;
            }
        }
        #endregion
        
        #region TextParser Property
        /// <summary>
        /// The XML name of the <see cref="TextParser"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        internal const string TextParserPropertyName = "textParser";
        
        /// <summary>
        /// Gets or sets 设置或获取文本解释器。
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        [global::System.ComponentModel.DescriptionAttribute("设置或获取文本解释器。")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::MasterDuner.HHProjects.Csq.Highpincn.Configuration.HighpinCnQueryServiceSection.TextParserPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public global::MasterDuner.HHProjects.Csq.Highpincn.Configuration.TextParsingElement TextParser
        {
            get
            {
                return ((global::MasterDuner.HHProjects.Csq.Highpincn.Configuration.TextParsingElement)(base[global::MasterDuner.HHProjects.Csq.Highpincn.Configuration.HighpinCnQueryServiceSection.TextParserPropertyName]));
            }
            set
            {
                base[global::MasterDuner.HHProjects.Csq.Highpincn.Configuration.HighpinCnQueryServiceSection.TextParserPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace MasterDuner.HHProjects.Csq.Highpincn.Configuration
{
    
    
    /// <summary>
    /// 验证码临时目录配置。
    /// </summary>
    public sealed partial class ValidatingCodeTemporaryDirectoryElement : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region Path Property
        /// <summary>
        /// The XML name of the <see cref="Path"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        internal const string PathPropertyName = "path";
        
        /// <summary>
        /// Gets or sets 设置或获取临时文件路径。
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        [global::System.ComponentModel.DescriptionAttribute("设置或获取临时文件路径。")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::MasterDuner.HHProjects.Csq.Highpincn.Configuration.ValidatingCodeTemporaryDirectoryElement.PathPropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false)]
        public string Path
        {
            get
            {
                return ((string)(base[global::MasterDuner.HHProjects.Csq.Highpincn.Configuration.ValidatingCodeTemporaryDirectoryElement.PathPropertyName]));
            }
            set
            {
                base[global::MasterDuner.HHProjects.Csq.Highpincn.Configuration.ValidatingCodeTemporaryDirectoryElement.PathPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace MasterDuner.HHProjects.Csq.Highpincn.Configuration
{
    
    
    /// <summary>
    /// 合法的验证码字符序列配置。
    /// </summary>
    public sealed partial class LegalCharsequenceElement : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region Chars Property
        /// <summary>
        /// The XML name of the <see cref="Chars"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        internal const string CharsPropertyName = "chars";
        
        /// <summary>
        /// Gets or sets 设置或获取字符串序列。
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        [global::System.ComponentModel.DescriptionAttribute("设置或获取字符串序列。")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::MasterDuner.HHProjects.Csq.Highpincn.Configuration.LegalCharsequenceElement.CharsPropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false)]
        public string Chars
        {
            get
            {
                return ((string)(base[global::MasterDuner.HHProjects.Csq.Highpincn.Configuration.LegalCharsequenceElement.CharsPropertyName]));
            }
            set
            {
                base[global::MasterDuner.HHProjects.Csq.Highpincn.Configuration.LegalCharsequenceElement.CharsPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace MasterDuner.HHProjects.Csq.Highpincn.Configuration
{
    
    
    /// <summary>
    /// 正则表达式配置。
    /// </summary>
    public sealed partial class RegExpressionElement : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region Name Property
        /// <summary>
        /// The XML name of the <see cref="Name"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        internal const string NamePropertyName = "name";
        
        /// <summary>
        /// Gets or sets 设置或获取正则表达式描述名称。
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        [global::System.ComponentModel.DescriptionAttribute("设置或获取正则表达式描述名称。")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::MasterDuner.HHProjects.Csq.Highpincn.Configuration.RegExpressionElement.NamePropertyName, IsRequired=true, IsKey=true, IsDefaultCollection=false)]
        public string Name
        {
            get
            {
                return ((string)(base[global::MasterDuner.HHProjects.Csq.Highpincn.Configuration.RegExpressionElement.NamePropertyName]));
            }
            set
            {
                base[global::MasterDuner.HHProjects.Csq.Highpincn.Configuration.RegExpressionElement.NamePropertyName] = value;
            }
        }
        #endregion
        
        #region Expression Property
        /// <summary>
        /// The XML name of the <see cref="Expression"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        internal const string ExpressionPropertyName = "expression";
        
        /// <summary>
        /// Gets or sets 设置或获取正则表达式。
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        [global::System.ComponentModel.DescriptionAttribute("设置或获取正则表达式。")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::MasterDuner.HHProjects.Csq.Highpincn.Configuration.RegExpressionElement.ExpressionPropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false)]
        public string Expression
        {
            get
            {
                return ((string)(base[global::MasterDuner.HHProjects.Csq.Highpincn.Configuration.RegExpressionElement.ExpressionPropertyName]));
            }
            set
            {
                base[global::MasterDuner.HHProjects.Csq.Highpincn.Configuration.RegExpressionElement.ExpressionPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace MasterDuner.HHProjects.Csq.Highpincn.Configuration
{
    
    
    /// <summary>
    /// RegExpressionElement配置集合。
    /// </summary>
    [global::System.Configuration.ConfigurationCollectionAttribute(typeof(global::MasterDuner.HHProjects.Csq.Highpincn.Configuration.RegExpressionElement), CollectionType=global::System.Configuration.ConfigurationElementCollectionType.BasicMap, AddItemName=global::MasterDuner.HHProjects.Csq.Highpincn.Configuration.RegExpressionElementCollection.RegExpressionElementPropertyName)]
    public sealed partial class RegExpressionElementCollection : global::System.Configuration.ConfigurationElementCollection
    {
        
        #region Constants
        /// <summary>
        /// The XML name of the individual <see cref="global::MasterDuner.HHProjects.Csq.Highpincn.Configuration.RegExpressionElement"/> instances in this collection.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        internal const string RegExpressionElementPropertyName = "add";
        #endregion
        
        #region Overrides
        /// <summary>
        /// Gets the type of the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <returns>The <see cref="global::System.Configuration.ConfigurationElementCollectionType"/> of this collection.</returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        public override global::System.Configuration.ConfigurationElementCollectionType CollectionType
        {
            get
            {
                return global::System.Configuration.ConfigurationElementCollectionType.BasicMap;
            }
        }
        
        /// <summary>
        /// Gets the name used to identify this collection of elements
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        protected override string ElementName
        {
            get
            {
                return global::MasterDuner.HHProjects.Csq.Highpincn.Configuration.RegExpressionElementCollection.RegExpressionElementPropertyName;
            }
        }
        
        /// <summary>
        /// Indicates whether the specified <see cref="global::System.Configuration.ConfigurationElement"/> exists in the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="elementName">The name of the element to verify.</param>
        /// <returns>
        /// <see langword="true"/> if the element exists in the collection; otherwise, <see langword="false"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        protected override bool IsElementName(string elementName)
        {
            return (elementName == global::MasterDuner.HHProjects.Csq.Highpincn.Configuration.RegExpressionElementCollection.RegExpressionElementPropertyName);
        }
        
        /// <summary>
        /// Gets the element key for the specified configuration element.
        /// </summary>
        /// <param name="element">The <see cref="global::System.Configuration.ConfigurationElement"/> to return the key for.</param>
        /// <returns>
        /// An <see cref="object"/> that acts as the key for the specified <see cref="global::System.Configuration.ConfigurationElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        protected override object GetElementKey(global::System.Configuration.ConfigurationElement element)
        {
            return ((global::MasterDuner.HHProjects.Csq.Highpincn.Configuration.RegExpressionElement)(element)).Name;
        }
        
        /// <summary>
        /// Creates a new <see cref="global::MasterDuner.HHProjects.Csq.Highpincn.Configuration.RegExpressionElement"/>.
        /// </summary>
        /// <returns>
        /// A new <see cref="global::MasterDuner.HHProjects.Csq.Highpincn.Configuration.RegExpressionElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        protected override global::System.Configuration.ConfigurationElement CreateNewElement()
        {
            return new global::MasterDuner.HHProjects.Csq.Highpincn.Configuration.RegExpressionElement();
        }
        #endregion
        
        #region Indexer
        /// <summary>
        /// Gets the <see cref="global::MasterDuner.HHProjects.Csq.Highpincn.Configuration.RegExpressionElement"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::MasterDuner.HHProjects.Csq.Highpincn.Configuration.RegExpressionElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        public global::MasterDuner.HHProjects.Csq.Highpincn.Configuration.RegExpressionElement this[int index]
        {
            get
            {
                return ((global::MasterDuner.HHProjects.Csq.Highpincn.Configuration.RegExpressionElement)(base.BaseGet(index)));
            }
        }
        
        /// <summary>
        /// Gets the <see cref="global::MasterDuner.HHProjects.Csq.Highpincn.Configuration.RegExpressionElement"/> with the specified key.
        /// </summary>
        /// <param name="name">The key of the <see cref="global::MasterDuner.HHProjects.Csq.Highpincn.Configuration.RegExpressionElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        public global::MasterDuner.HHProjects.Csq.Highpincn.Configuration.RegExpressionElement this[object name]
        {
            get
            {
                return ((global::MasterDuner.HHProjects.Csq.Highpincn.Configuration.RegExpressionElement)(base.BaseGet(name)));
            }
        }
        #endregion
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
    }
}
namespace MasterDuner.HHProjects.Csq.Highpincn.Configuration
{
    
    
    /// <summary>
    /// 正则表达式配置分组。
    /// </summary>
    public sealed partial class RegExpressionGroupElement : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region Name Property
        /// <summary>
        /// The XML name of the <see cref="Name"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        internal const string NamePropertyName = "name";
        
        /// <summary>
        /// Gets or sets 设置或获取正则表达式分组名称。
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        [global::System.ComponentModel.DescriptionAttribute("设置或获取正则表达式分组名称。")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::MasterDuner.HHProjects.Csq.Highpincn.Configuration.RegExpressionGroupElement.NamePropertyName, IsRequired=true, IsKey=true, IsDefaultCollection=false)]
        public string Name
        {
            get
            {
                return ((string)(base[global::MasterDuner.HHProjects.Csq.Highpincn.Configuration.RegExpressionGroupElement.NamePropertyName]));
            }
            set
            {
                base[global::MasterDuner.HHProjects.Csq.Highpincn.Configuration.RegExpressionGroupElement.NamePropertyName] = value;
            }
        }
        #endregion
        
        #region Expressions Property
        /// <summary>
        /// The XML name of the <see cref="Expressions"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        internal const string ExpressionsPropertyName = "";
        
        /// <summary>
        /// Gets or sets 设置或获取此分组中的正则表达式。
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        [global::System.ComponentModel.DescriptionAttribute("设置或获取此分组中的正则表达式。")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::MasterDuner.HHProjects.Csq.Highpincn.Configuration.RegExpressionGroupElement.ExpressionsPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=true)]
        public global::MasterDuner.HHProjects.Csq.Highpincn.Configuration.RegExpressionElementCollection Expressions
        {
            get
            {
                return ((global::MasterDuner.HHProjects.Csq.Highpincn.Configuration.RegExpressionElementCollection)(base[global::MasterDuner.HHProjects.Csq.Highpincn.Configuration.RegExpressionGroupElement.ExpressionsPropertyName]));
            }
            set
            {
                base[global::MasterDuner.HHProjects.Csq.Highpincn.Configuration.RegExpressionGroupElement.ExpressionsPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace MasterDuner.HHProjects.Csq.Highpincn.Configuration
{
    
    
    /// <summary>
    /// RegExpressionGroupElement配置集合。
    /// </summary>
    [global::System.Configuration.ConfigurationCollectionAttribute(typeof(global::MasterDuner.HHProjects.Csq.Highpincn.Configuration.RegExpressionGroupElement), CollectionType=global::System.Configuration.ConfigurationElementCollectionType.BasicMap, AddItemName=global::MasterDuner.HHProjects.Csq.Highpincn.Configuration.RegExpressionGroupElementCollection.RegExpressionGroupElementPropertyName)]
    public sealed partial class RegExpressionGroupElementCollection : global::System.Configuration.ConfigurationElementCollection
    {
        
        #region Constants
        /// <summary>
        /// The XML name of the individual <see cref="global::MasterDuner.HHProjects.Csq.Highpincn.Configuration.RegExpressionGroupElement"/> instances in this collection.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        internal const string RegExpressionGroupElementPropertyName = "group";
        #endregion
        
        #region Overrides
        /// <summary>
        /// Gets the type of the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <returns>The <see cref="global::System.Configuration.ConfigurationElementCollectionType"/> of this collection.</returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        public override global::System.Configuration.ConfigurationElementCollectionType CollectionType
        {
            get
            {
                return global::System.Configuration.ConfigurationElementCollectionType.BasicMap;
            }
        }
        
        /// <summary>
        /// Gets the name used to identify this collection of elements
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        protected override string ElementName
        {
            get
            {
                return global::MasterDuner.HHProjects.Csq.Highpincn.Configuration.RegExpressionGroupElementCollection.RegExpressionGroupElementPropertyName;
            }
        }
        
        /// <summary>
        /// Indicates whether the specified <see cref="global::System.Configuration.ConfigurationElement"/> exists in the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="elementName">The name of the element to verify.</param>
        /// <returns>
        /// <see langword="true"/> if the element exists in the collection; otherwise, <see langword="false"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        protected override bool IsElementName(string elementName)
        {
            return (elementName == global::MasterDuner.HHProjects.Csq.Highpincn.Configuration.RegExpressionGroupElementCollection.RegExpressionGroupElementPropertyName);
        }
        
        /// <summary>
        /// Gets the element key for the specified configuration element.
        /// </summary>
        /// <param name="element">The <see cref="global::System.Configuration.ConfigurationElement"/> to return the key for.</param>
        /// <returns>
        /// An <see cref="object"/> that acts as the key for the specified <see cref="global::System.Configuration.ConfigurationElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        protected override object GetElementKey(global::System.Configuration.ConfigurationElement element)
        {
            return ((global::MasterDuner.HHProjects.Csq.Highpincn.Configuration.RegExpressionGroupElement)(element)).Name;
        }
        
        /// <summary>
        /// Creates a new <see cref="global::MasterDuner.HHProjects.Csq.Highpincn.Configuration.RegExpressionGroupElement"/>.
        /// </summary>
        /// <returns>
        /// A new <see cref="global::MasterDuner.HHProjects.Csq.Highpincn.Configuration.RegExpressionGroupElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        protected override global::System.Configuration.ConfigurationElement CreateNewElement()
        {
            return new global::MasterDuner.HHProjects.Csq.Highpincn.Configuration.RegExpressionGroupElement();
        }
        #endregion
        
        #region Indexer
        /// <summary>
        /// Gets the <see cref="global::MasterDuner.HHProjects.Csq.Highpincn.Configuration.RegExpressionGroupElement"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::MasterDuner.HHProjects.Csq.Highpincn.Configuration.RegExpressionGroupElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        public global::MasterDuner.HHProjects.Csq.Highpincn.Configuration.RegExpressionGroupElement this[int index]
        {
            get
            {
                return ((global::MasterDuner.HHProjects.Csq.Highpincn.Configuration.RegExpressionGroupElement)(base.BaseGet(index)));
            }
        }
        
        /// <summary>
        /// Gets the <see cref="global::MasterDuner.HHProjects.Csq.Highpincn.Configuration.RegExpressionGroupElement"/> with the specified key.
        /// </summary>
        /// <param name="name">The key of the <see cref="global::MasterDuner.HHProjects.Csq.Highpincn.Configuration.RegExpressionGroupElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        public global::MasterDuner.HHProjects.Csq.Highpincn.Configuration.RegExpressionGroupElement this[object name]
        {
            get
            {
                return ((global::MasterDuner.HHProjects.Csq.Highpincn.Configuration.RegExpressionGroupElement)(base.BaseGet(name)));
            }
        }
        #endregion
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
    }
}
namespace MasterDuner.HHProjects.Csq.Highpincn.Configuration
{
    
    
    /// <summary>
    /// 文本解析配置。
    /// </summary>
    public sealed partial class TextParsingElement : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region RegularExpressions Property
        /// <summary>
        /// The XML name of the <see cref="RegularExpressions"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        internal const string RegularExpressionsPropertyName = "regularExpressions";
        
        /// <summary>
        /// Gets or sets 设置或获取正则表达式。
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        [global::System.ComponentModel.DescriptionAttribute("设置或获取正则表达式。")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::MasterDuner.HHProjects.Csq.Highpincn.Configuration.TextParsingElement.RegularExpressionsPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public global::MasterDuner.HHProjects.Csq.Highpincn.Configuration.RegExpressionGroupElementCollection RegularExpressions
        {
            get
            {
                return ((global::MasterDuner.HHProjects.Csq.Highpincn.Configuration.RegExpressionGroupElementCollection)(base[global::MasterDuner.HHProjects.Csq.Highpincn.Configuration.TextParsingElement.RegularExpressionsPropertyName]));
            }
            set
            {
                base[global::MasterDuner.HHProjects.Csq.Highpincn.Configuration.TextParsingElement.RegularExpressionsPropertyName] = value;
            }
        }
        #endregion
    }
}
