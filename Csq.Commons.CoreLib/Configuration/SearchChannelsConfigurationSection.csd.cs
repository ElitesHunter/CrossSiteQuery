//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.18444
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace MasterDuner.Cooperations.Csq.Commons.Configuration
{
    
    
    /// <summary>
    /// 指定搜索渠道入口程序类型配置。
    /// </summary>
    public sealed partial class EntryPointElement : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region Enabled Property
        /// <summary>
        /// The XML name of the <see cref="Enabled"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        internal const string EnabledPropertyName = "enabled";
        
        /// <summary>
        /// Gets or sets 设置或获取是否启用此入口点。
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        [global::System.ComponentModel.DescriptionAttribute("设置或获取是否启用此入口点。")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::MasterDuner.Cooperations.Csq.Commons.Configuration.EntryPointElement.EnabledPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false, DefaultValue=true)]
        public bool Enabled
        {
            get
            {
                return ((bool)(base[global::MasterDuner.Cooperations.Csq.Commons.Configuration.EntryPointElement.EnabledPropertyName]));
            }
            set
            {
                base[global::MasterDuner.Cooperations.Csq.Commons.Configuration.EntryPointElement.EnabledPropertyName] = value;
            }
        }
        #endregion
        
        #region PrivateConfig Property
        /// <summary>
        /// The XML name of the <see cref="PrivateConfig"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        internal const string PrivateConfigPropertyName = "privateConfig";
        
        /// <summary>
        /// Gets or sets 设置或获取私有配置。
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        [global::System.ComponentModel.DescriptionAttribute("设置或获取私有配置。")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::MasterDuner.Cooperations.Csq.Commons.Configuration.EntryPointElement.PrivateConfigPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public global::MasterDuner.Cooperations.Csq.Commons.Configuration.PrivateConfigurationElement PrivateConfig
        {
            get
            {
                return ((global::MasterDuner.Cooperations.Csq.Commons.Configuration.PrivateConfigurationElement)(base[global::MasterDuner.Cooperations.Csq.Commons.Configuration.EntryPointElement.PrivateConfigPropertyName]));
            }
            set
            {
                base[global::MasterDuner.Cooperations.Csq.Commons.Configuration.EntryPointElement.PrivateConfigPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace MasterDuner.Cooperations.Csq.Commons.Configuration
{
    
    
    /// <summary>
    /// URL地址配置。
    /// </summary>
    public sealed partial class UrlElement : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region Url Property
        /// <summary>
        /// The XML name of the <see cref="Url"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        internal const string UrlPropertyName = "url";
        
        /// <summary>
        /// Gets or sets 设置或获取URL。
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        [global::System.ComponentModel.DescriptionAttribute("设置或获取URL。")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::MasterDuner.Cooperations.Csq.Commons.Configuration.UrlElement.UrlPropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false)]
        public string Url
        {
            get
            {
                return ((string)(base[global::MasterDuner.Cooperations.Csq.Commons.Configuration.UrlElement.UrlPropertyName]));
            }
            set
            {
                base[global::MasterDuner.Cooperations.Csq.Commons.Configuration.UrlElement.UrlPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace MasterDuner.Cooperations.Csq.Commons.Configuration
{
    
    
    /// <summary>
    /// 搜索渠道配置。
    /// </summary>
    public sealed partial class SearchChannelElement : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region ID Property
        /// <summary>
        /// The XML name of the <see cref="ID"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        internal const string IDPropertyName = "id";
        
        /// <summary>
        /// Gets or sets 设置或获取渠道标记值。
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        [global::System.ComponentModel.DescriptionAttribute("设置或获取渠道标记值。")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::MasterDuner.Cooperations.Csq.Commons.Configuration.SearchChannelElement.IDPropertyName, IsRequired=true, IsKey=true, IsDefaultCollection=false, DefaultValue=1024)]
        public int ID
        {
            get
            {
                return ((int)(base[global::MasterDuner.Cooperations.Csq.Commons.Configuration.SearchChannelElement.IDPropertyName]));
            }
            set
            {
                base[global::MasterDuner.Cooperations.Csq.Commons.Configuration.SearchChannelElement.IDPropertyName] = value;
            }
        }
        #endregion
        
        #region Description Property
        /// <summary>
        /// The XML name of the <see cref="Description"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        internal const string DescriptionPropertyName = "description";
        
        /// <summary>
        /// Gets or sets 设置或获取描述信息。
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        [global::System.ComponentModel.DescriptionAttribute("设置或获取描述信息。")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::MasterDuner.Cooperations.Csq.Commons.Configuration.SearchChannelElement.DescriptionPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public string Description
        {
            get
            {
                return ((string)(base[global::MasterDuner.Cooperations.Csq.Commons.Configuration.SearchChannelElement.DescriptionPropertyName]));
            }
            set
            {
                base[global::MasterDuner.Cooperations.Csq.Commons.Configuration.SearchChannelElement.DescriptionPropertyName] = value;
            }
        }
        #endregion
        
        #region Domain Property
        /// <summary>
        /// The XML name of the <see cref="Domain"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        internal const string DomainPropertyName = "domain";
        
        /// <summary>
        /// Gets or sets 设置或获取搜索渠道的域名称。
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        [global::System.ComponentModel.DescriptionAttribute("设置或获取搜索渠道的域名称。")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::MasterDuner.Cooperations.Csq.Commons.Configuration.SearchChannelElement.DomainPropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false)]
        public string Domain
        {
            get
            {
                return ((string)(base[global::MasterDuner.Cooperations.Csq.Commons.Configuration.SearchChannelElement.DomainPropertyName]));
            }
            set
            {
                base[global::MasterDuner.Cooperations.Csq.Commons.Configuration.SearchChannelElement.DomainPropertyName] = value;
            }
        }
        #endregion
        
        #region EntryPoint Property
        /// <summary>
        /// The XML name of the <see cref="EntryPoint"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        internal const string EntryPointPropertyName = "entryPoint";
        
        /// <summary>
        /// Gets or sets 设置或获取入口点配置。
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        [global::System.ComponentModel.DescriptionAttribute("设置或获取入口点配置。")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::MasterDuner.Cooperations.Csq.Commons.Configuration.SearchChannelElement.EntryPointPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public global::MasterDuner.Cooperations.Csq.Commons.Configuration.EntryPointElement EntryPoint
        {
            get
            {
                return ((global::MasterDuner.Cooperations.Csq.Commons.Configuration.EntryPointElement)(base[global::MasterDuner.Cooperations.Csq.Commons.Configuration.SearchChannelElement.EntryPointPropertyName]));
            }
            set
            {
                base[global::MasterDuner.Cooperations.Csq.Commons.Configuration.SearchChannelElement.EntryPointPropertyName] = value;
            }
        }
        #endregion
        
        #region HomePage Property
        /// <summary>
        /// The XML name of the <see cref="HomePage"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        internal const string HomePagePropertyName = "homePage";
        
        /// <summary>
        /// Gets or sets 设置或获取首页URL配置。
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        [global::System.ComponentModel.DescriptionAttribute("设置或获取首页URL配置。")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::MasterDuner.Cooperations.Csq.Commons.Configuration.SearchChannelElement.HomePagePropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public global::MasterDuner.Cooperations.Csq.Commons.Configuration.UrlElement HomePage
        {
            get
            {
                return ((global::MasterDuner.Cooperations.Csq.Commons.Configuration.UrlElement)(base[global::MasterDuner.Cooperations.Csq.Commons.Configuration.SearchChannelElement.HomePagePropertyName]));
            }
            set
            {
                base[global::MasterDuner.Cooperations.Csq.Commons.Configuration.SearchChannelElement.HomePagePropertyName] = value;
            }
        }
        #endregion
        
        #region Caching Property
        /// <summary>
        /// The XML name of the <see cref="Caching"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        internal const string CachingPropertyName = "caching";
        
        /// <summary>
        /// Gets or sets 设置或获取缓存配置。
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        [global::System.ComponentModel.DescriptionAttribute("设置或获取缓存配置。")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::MasterDuner.Cooperations.Csq.Commons.Configuration.SearchChannelElement.CachingPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public global::MasterDuner.Cooperations.Csq.Commons.Configuration.DataCacheElement Caching
        {
            get
            {
                return ((global::MasterDuner.Cooperations.Csq.Commons.Configuration.DataCacheElement)(base[global::MasterDuner.Cooperations.Csq.Commons.Configuration.SearchChannelElement.CachingPropertyName]));
            }
            set
            {
                base[global::MasterDuner.Cooperations.Csq.Commons.Configuration.SearchChannelElement.CachingPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace MasterDuner.Cooperations.Csq.Commons.Configuration
{
    
    
    /// <summary>
    /// 私有配置文件配置。
    /// </summary>
    public sealed partial class PrivateConfigurationElement : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region HasPrivateConfigurationFile Property
        /// <summary>
        /// The XML name of the <see cref="HasPrivateConfigurationFile"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        internal const string HasPrivateConfigurationFilePropertyName = "hasPrivateConfigurationFile";
        
        /// <summary>
        /// Gets or sets 设置或获取是否含有私有配置。
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        [global::System.ComponentModel.DescriptionAttribute("设置或获取是否含有私有配置。")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::MasterDuner.Cooperations.Csq.Commons.Configuration.PrivateConfigurationElement.HasPrivateConfigurationFilePropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false, DefaultValue=false)]
        public bool HasPrivateConfigurationFile
        {
            get
            {
                return ((bool)(base[global::MasterDuner.Cooperations.Csq.Commons.Configuration.PrivateConfigurationElement.HasPrivateConfigurationFilePropertyName]));
            }
            set
            {
                base[global::MasterDuner.Cooperations.Csq.Commons.Configuration.PrivateConfigurationElement.HasPrivateConfigurationFilePropertyName] = value;
            }
        }
        #endregion
        
        #region PrivateConfigurationFileName Property
        /// <summary>
        /// The XML name of the <see cref="PrivateConfigurationFileName"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        internal const string PrivateConfigurationFileNamePropertyName = "privateConfigurationFileName";
        
        /// <summary>
        /// Gets or sets 设置或获取私有配置文件名称。
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        [global::System.ComponentModel.DescriptionAttribute("设置或获取私有配置文件名称。")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::MasterDuner.Cooperations.Csq.Commons.Configuration.PrivateConfigurationElement.PrivateConfigurationFileNamePropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public string PrivateConfigurationFileName
        {
            get
            {
                return ((string)(base[global::MasterDuner.Cooperations.Csq.Commons.Configuration.PrivateConfigurationElement.PrivateConfigurationFileNamePropertyName]));
            }
            set
            {
                base[global::MasterDuner.Cooperations.Csq.Commons.Configuration.PrivateConfigurationElement.PrivateConfigurationFileNamePropertyName] = value;
            }
        }
        #endregion
    }
}
namespace MasterDuner.Cooperations.Csq.Commons.Configuration
{
    
    
    /// <summary>
    /// SearchChannelElement配置集合。
    /// </summary>
    [global::System.Configuration.ConfigurationCollectionAttribute(typeof(global::MasterDuner.Cooperations.Csq.Commons.Configuration.SearchChannelElement), CollectionType=global::System.Configuration.ConfigurationElementCollectionType.BasicMap, AddItemName=global::MasterDuner.Cooperations.Csq.Commons.Configuration.SearchChannelElementCollection.SearchChannelElementPropertyName)]
    public sealed partial class SearchChannelElementCollection : global::System.Configuration.ConfigurationElementCollection
    {
        
        #region Constants
        /// <summary>
        /// The XML name of the individual <see cref="global::MasterDuner.Cooperations.Csq.Commons.Configuration.SearchChannelElement"/> instances in this collection.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        internal const string SearchChannelElementPropertyName = "add";
        #endregion
        
        #region Overrides
        /// <summary>
        /// Gets the type of the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <returns>The <see cref="global::System.Configuration.ConfigurationElementCollectionType"/> of this collection.</returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        public override global::System.Configuration.ConfigurationElementCollectionType CollectionType
        {
            get
            {
                return global::System.Configuration.ConfigurationElementCollectionType.BasicMap;
            }
        }
        
        /// <summary>
        /// Gets the name used to identify this collection of elements
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        protected override string ElementName
        {
            get
            {
                return global::MasterDuner.Cooperations.Csq.Commons.Configuration.SearchChannelElementCollection.SearchChannelElementPropertyName;
            }
        }
        
        /// <summary>
        /// Indicates whether the specified <see cref="global::System.Configuration.ConfigurationElement"/> exists in the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="elementName">The name of the element to verify.</param>
        /// <returns>
        /// <see langword="true"/> if the element exists in the collection; otherwise, <see langword="false"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        protected override bool IsElementName(string elementName)
        {
            return (elementName == global::MasterDuner.Cooperations.Csq.Commons.Configuration.SearchChannelElementCollection.SearchChannelElementPropertyName);
        }
        
        /// <summary>
        /// Gets the element key for the specified configuration element.
        /// </summary>
        /// <param name="element">The <see cref="global::System.Configuration.ConfigurationElement"/> to return the key for.</param>
        /// <returns>
        /// An <see cref="object"/> that acts as the key for the specified <see cref="global::System.Configuration.ConfigurationElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        protected override object GetElementKey(global::System.Configuration.ConfigurationElement element)
        {
            return ((global::MasterDuner.Cooperations.Csq.Commons.Configuration.SearchChannelElement)(element)).ID;
        }
        
        /// <summary>
        /// Creates a new <see cref="global::MasterDuner.Cooperations.Csq.Commons.Configuration.SearchChannelElement"/>.
        /// </summary>
        /// <returns>
        /// A new <see cref="global::MasterDuner.Cooperations.Csq.Commons.Configuration.SearchChannelElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        protected override global::System.Configuration.ConfigurationElement CreateNewElement()
        {
            return new global::MasterDuner.Cooperations.Csq.Commons.Configuration.SearchChannelElement();
        }
        #endregion
        
        #region Indexer
        /// <summary>
        /// Gets the <see cref="global::MasterDuner.Cooperations.Csq.Commons.Configuration.SearchChannelElement"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::MasterDuner.Cooperations.Csq.Commons.Configuration.SearchChannelElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        public global::MasterDuner.Cooperations.Csq.Commons.Configuration.SearchChannelElement this[int index]
        {
            get
            {
                return ((global::MasterDuner.Cooperations.Csq.Commons.Configuration.SearchChannelElement)(base.BaseGet(index)));
            }
        }
        
        /// <summary>
        /// Gets the <see cref="global::MasterDuner.Cooperations.Csq.Commons.Configuration.SearchChannelElement"/> with the specified key.
        /// </summary>
        /// <param name="id">The key of the <see cref="global::MasterDuner.Cooperations.Csq.Commons.Configuration.SearchChannelElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        public global::MasterDuner.Cooperations.Csq.Commons.Configuration.SearchChannelElement this[object id]
        {
            get
            {
                return ((global::MasterDuner.Cooperations.Csq.Commons.Configuration.SearchChannelElement)(base.BaseGet(id)));
            }
        }
        #endregion
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
    }
}
namespace MasterDuner.Cooperations.Csq.Commons.Configuration
{
    
    
    /// <summary>
    /// 搜索渠道配置。
    /// </summary>
    public sealed partial class SearchChannelSection : global::System.Configuration.ConfigurationSection
    {
        
        #region Xmlns Property
        /// <summary>
        /// The XML name of the <see cref="Xmlns"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        internal const string XmlnsPropertyName = "xmlns";
        
        /// <summary>
        /// Gets the XML namespace of this Configuration Section.
        /// </summary>
        /// <remarks>
        /// This property makes sure that if the configuration file contains the XML namespace,
        /// the parser doesn't throw an exception because it encounters the unknown "xmlns" attribute.
        /// </remarks>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::MasterDuner.Cooperations.Csq.Commons.Configuration.SearchChannelSection.XmlnsPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public string Xmlns
        {
            get
            {
                return ((string)(base[global::MasterDuner.Cooperations.Csq.Commons.Configuration.SearchChannelSection.XmlnsPropertyName]));
            }
        }
        #endregion
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region Channels Property
        /// <summary>
        /// The XML name of the <see cref="Channels"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        internal const string ChannelsPropertyName = "";
        
        /// <summary>
        /// Gets or sets the Channels.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        [global::System.ComponentModel.DescriptionAttribute("The Channels.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::MasterDuner.Cooperations.Csq.Commons.Configuration.SearchChannelSection.ChannelsPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=true)]
        public global::MasterDuner.Cooperations.Csq.Commons.Configuration.SearchChannelElementCollection Channels
        {
            get
            {
                return ((global::MasterDuner.Cooperations.Csq.Commons.Configuration.SearchChannelElementCollection)(base[global::MasterDuner.Cooperations.Csq.Commons.Configuration.SearchChannelSection.ChannelsPropertyName]));
            }
            set
            {
                base[global::MasterDuner.Cooperations.Csq.Commons.Configuration.SearchChannelSection.ChannelsPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace MasterDuner.Cooperations.Csq.Commons.Configuration
{
    
    
    /// <summary>
    /// 数据缓存配置。
    /// </summary>
    public sealed partial class DataCacheElement : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region CacheRequired Property
        /// <summary>
        /// The XML name of the <see cref="CacheRequired"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        internal const string CacheRequiredPropertyName = "cacheRequired";
        
        /// <summary>
        /// Gets or sets 设置或获取是否需要缓存。
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        [global::System.ComponentModel.DescriptionAttribute("设置或获取是否需要缓存。")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::MasterDuner.Cooperations.Csq.Commons.Configuration.DataCacheElement.CacheRequiredPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false, DefaultValue=false)]
        public bool CacheRequired
        {
            get
            {
                return ((bool)(base[global::MasterDuner.Cooperations.Csq.Commons.Configuration.DataCacheElement.CacheRequiredPropertyName]));
            }
            set
            {
                base[global::MasterDuner.Cooperations.Csq.Commons.Configuration.DataCacheElement.CacheRequiredPropertyName] = value;
            }
        }
        #endregion
        
        #region NamePrefix Property
        /// <summary>
        /// The XML name of the <see cref="NamePrefix"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        internal const string NamePrefixPropertyName = "namePrefix";
        
        /// <summary>
        /// Gets or sets 设置或获取缓存标识名称前缀。
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        [global::System.ComponentModel.DescriptionAttribute("设置或获取缓存标识名称前缀。")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::MasterDuner.Cooperations.Csq.Commons.Configuration.DataCacheElement.NamePrefixPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public string NamePrefix
        {
            get
            {
                return ((string)(base[global::MasterDuner.Cooperations.Csq.Commons.Configuration.DataCacheElement.NamePrefixPropertyName]));
            }
            set
            {
                base[global::MasterDuner.Cooperations.Csq.Commons.Configuration.DataCacheElement.NamePrefixPropertyName] = value;
            }
        }
        #endregion
    }
}
